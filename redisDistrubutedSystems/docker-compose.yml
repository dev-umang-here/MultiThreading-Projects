version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: shedlock-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --appendfsync everysec
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - shedlock-network

  app-instance-1:
    build: .
    container_name: shedlock-app-1
    ports:
      - "8081:8080"
    environment:
      - SERVER_PORT=8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - INSTANCE_ID=instance-1
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - shedlock-network
    restart: unless-stopped

  app-instance-2:
    build: .
    container_name: shedlock-app-2
    ports:
      - "8082:8080"
    environment:
      - SERVER_PORT=8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - INSTANCE_ID=instance-2
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - shedlock-network
    restart: unless-stopped

  app-instance-3:
    build: .
    container_name: shedlock-app-3
    ports:
      - "8083:8080"
    environment:
      - SERVER_PORT=8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - INSTANCE_ID=instance-3
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - shedlock-network
    restart: unless-stopped

  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: redis-commander
    hostname: redis-commander
    ports:
      - "8084:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - shedlock-network

networks:
  shedlock-network:
    driver: bridge

volumes:
  redis_data: 